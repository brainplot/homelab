- name: Install container runtime
  hosts: kubernetesnodes
  roles: [containerd]

- name: Bootstrap cluster
  hosts: kubernetescontrolplane
  roles:
    - kubernetes_control_plane
    - kubeconfig
    - helm
    - cilium_cli
  pre_tasks:
    - name: Resolve k8s to localhost
      become: true
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: 127.0.0.1          {{ kubernetes_control_plane_endpoint }}
        state: present
  tasks:
    - become: true
      become_user: admin
      block:
        - name: Install cilium
          ansible.builtin.import_tasks: tasks/install_helm_release.yaml
          vars:
            release_name: cilium
            release_namespace: kube-system
            repo_url: https://helm.cilium.io/
            create_namespace: false
            values: '{{ lookup("template", "cilium_values.yaml.j2") | from_yaml }}'

        - name: Apply CiliumLoadBalancerIPPool
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: cilium.io/v2alpha1
              kind: CiliumLoadBalancerIPPool
              metadata:
                name: home-pool
              spec:
                cidrs:
                - cidr: 100.64.0.0/16

        - name: Install ingress-nginx
          ansible.builtin.import_tasks: tasks/install_helm_release.yaml
          vars:
            release_name: ingress-nginx
            repo_url: https://kubernetes.github.io/ingress-nginx/
            values: '{{ lookup("template", "ingress_nginx_values.yaml.j2") | from_yaml }}'

        - name: Install kubelet-csr-approver
          ansible.builtin.import_tasks: tasks/install_helm_release.yaml
          vars:
            release_name: kubelet-csr-approver
            release_namespace: kube-system
            repo_url: https://postfinance.github.io/kubelet-csr-approver/
            create_namespace: false
            values: '{{ lookup("template", "kubelet_csr_approver_values.yaml.j2") | from_yaml }}'

        - name: Install cert-manager
          ansible.builtin.import_tasks: tasks/install_helm_release.yaml
          vars:
            repo_name: jetstack
            repo_url: https://charts.jetstack.io/
            release_name: cert-manager
            values:
              installCRDs: true

        - name: Install root CA
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: v1
              kind: Secret
              metadata:
                name: brainplot-ca
                namespace: cert-manager
              type: kubernetes.io/tls
              stringData:
                tls.crt: '{{ lookup("file", "ca.crt") }}'
                tls.key: '{{ lookup("file", "ca.key") }}'

        - name: Define root CA as a ClusterIssuer
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: brainplot
              spec:
                ca:
                  secretName: brainplot-ca
